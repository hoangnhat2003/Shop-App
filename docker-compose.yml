version: "3.4"

services:
  postgres:
    container_name: postgres_db
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - shop-backend-app
    restart: unless-stopped

  redis:
    image: redis:7
    restart: always
    hostname: redis
    networks:
      - shop-backend-app
    container_name: redis
    volumes:
      - shop-redis:/data
    ports:
      - '6379:6379'

  es:
    container_name: elastic_search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
    ports:
      - 9200:9200
      - 9300:9300
    restart: unless-stopped
    networks:
      - shop-backend-app
    volumes:
      - shop-es:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  rabbitmq:
    image: rabbitmq:3
    restart: always
    container_name: rabbitmq
    hostname: rabbitmq
    networks:
      - shop-backend-app
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
    shop-redis:
      driver: local
    shop-rabbitmq:
      driver: local
    shop-es:
      driver: local
    postgres:
      driver: local

networks:
    shop-backend-app:
      driver: bridge
